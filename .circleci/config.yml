test-defaults: &test-defaults
  environment: # environment variables for the build itself
    TEST_RESULTS: /tmp/test-results # path to where test results will be saved

  steps:
    - checkout

    - run:
        name: make test output directory
        command: |
          mkdir -p ${TEST_RESULTS}

    - run:
        name: store go version cache key part
        command: |
          go version | grep -oP "go[\d\.]+" > go-version

    - restore_cache:
        key: go-mod-v0-{{ checksum "go-version" }}-{{ checksum "go.sum" }}

    - run:
        name: wait for redis
        command: |
          dockerize -wait tcp://localhost:6379 -timeout 1m

    - run:
        name: run tests

        # store the results of our tests in the $TEST_RESULTS directory
        command: |
          PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
          gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES

    - save_cache:
        key: go-mod-v0-{{ checksum "go-version" }}-{{ checksum "go.sum" }}
        paths:
          - "/go/pkg/mod"

    - store_artifacts: # upload test summary for display in Artifacts
        path: /tmp/test-results
        destination: raw-test-output

    - store_test_results: # upload test results for display in Test Summary
        path: /tmp/test-results

version: 2
jobs:
  test-go-latest:
    <<: *test-defaults
    docker:
      - image: circleci/golang:latest
      - image: circleci/redis:latest

  test-go-1.13:
    <<: *test-defaults
    docker:
      - image: circleci/golang:1.13
      - image: circleci/redis:latest

  test-go-1.12:
    <<: *test-defaults
    docker:
      - image: circleci/golang:1.12
      - image: circleci/redis:latest

  test-go-1.11:
    <<: *test-defaults
    docker:
      - image: circleci/golang:1.11
      - image: circleci/redis:latest

workflows:
  version: 2
  build:
    jobs:
      - test-go-latest
      - test-go-1.13
      - test-go-1.12
      - test-go-1.11
